LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED:
  Parameters: {}
  Rule:
    LambdaFunctionPublicAccessProhibited:
      Properties:
        ConfigRuleName: lambda-function-public-access-prohibited
        Scope:
          ComplianceResourceTypes:
          - AWS::Lambda::Function
        Source:
          Owner: AWS
          SourceIdentifier: LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED
      Type: AWS::Config::ConfigRule
  Conditions: {}
RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED:
  Parameters: {}
  Rule:
    RdsAutomaticMinorVersionUpgradeEnabled:
      Properties:
        ConfigRuleName: rds-automatic-minor-version-upgrade-enabled
        Scope:
          ComplianceResourceTypes:
          - AWS::RDS::DBInstance
        Source:
          Owner: AWS
          SourceIdentifier: RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED
      Type: AWS::Config::ConfigRule
  Conditions: {}
RDS_INSTANCE_PUBLIC_ACCESS_CHECK:
  Parameters: {}
  Rule:
    RdsInstancePublicAccessCheck:
      Properties:
        ConfigRuleName: rds-instance-public-access-check
        Scope:
          ComplianceResourceTypes:
          - AWS::RDS::DBInstance
        Source:
          Owner: AWS
          SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK
      Type: AWS::Config::ConfigRule
  Conditions: {}
RDS_LOGGING_ENABLED:
  Parameters: {}
  Rule:
    RdsLoggingEnabled:
      Properties:
        ConfigRuleName: rds-logging-enabled
        Scope:
          ComplianceResourceTypes:
          - AWS::RDS::DBInstance
        Source:
          Owner: AWS
          SourceIdentifier: RDS_LOGGING_ENABLED
      Type: AWS::Config::ConfigRule
  Conditions: {}
RDS_STORAGE_ENCRYPTED:
  Parameters: {}
  Rule:
    RdsStorageEncrypted:
      Properties:
        ConfigRuleName: rds-storage-encrypted
        Scope:
          ComplianceResourceTypes:
          - AWS::RDS::DBInstance
        Source:
          Owner: AWS
          SourceIdentifier: RDS_STORAGE_ENCRYPTED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC:
  Parameters:
      S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:
        Default: 'True'
        Type: String
      S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:
        Default: 'True'
        Type: String
      S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:
        Default: 'True'
        Type: String
      S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:
        Default: 'True'
        Type: String
  Rule:
    S3AccountLevelPublicAccessBlocksPeriodic:
      Properties:
        ConfigRuleName: s3-account-level-public-access-blocks-periodic
        InputParameters:
          BlockPublicAcls:
            Fn::If:
            - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls
            - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls
            - Ref: AWS::NoValue
          BlockPublicPolicy:
            Fn::If:
            - s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy
            - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy
            - Ref: AWS::NoValue
          IgnorePublicAcls:
            Fn::If:
            - s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls
            - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls
            - Ref: AWS::NoValue
          RestrictPublicBuckets:
            Fn::If:
            - s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets
            - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets
            - Ref: AWS::NoValue
        Source:
          Owner: AWS
          SourceIdentifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC
      Type: AWS::Config::ConfigRule
  Conditions:
    s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls:
      Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicAcls
    s3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy:
      Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamBlockPublicPolicy
    s3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls:
      Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamIgnorePublicAcls
    s3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets:
      Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: S3AccountLevelPublicAccessBlocksPeriodicParamRestrictPublicBuckets
S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED:
  Parameters: {}
  Rule:
    S3BucketLevelPublicAccessProhibited:
      Properties:
        ConfigRuleName: s3-bucket-level-public-access-prohibited
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_BUCKET_LOGGING_ENABLED:
  Parameters: {}
  Rule:
    S3BucketLoggingEnabled:
      Properties:
        ConfigRuleName: s3-bucket-logging-enabled
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_LOGGING_ENABLED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_BUCKET_PUBLIC_READ_PROHIBITED:
  Parameters: {}
  Rule:
    S3BucketPublicReadProhibited:
      Properties:
        ConfigRuleName: s3-bucket-public-read-prohibited
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_BUCKET_PUBLIC_WRITE_PROHIBITED:
  Parameters: {}
  Rule:
    S3BucketPublicWriteProhibited:
      Properties:
        ConfigRuleName: s3-bucket-public-write-prohibited
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED:
  Parameters: {}
  Rule:
    S3BucketServerSideEncryptionEnabled:
      Properties:
        ConfigRuleName: s3-bucket-server-side-encryption-enabled
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_BUCKET_SSL_REQUESTS_ONLY:
  Parameters: {}
  Rule:
    S3BucketSslRequestsOnly:
      Properties:
        ConfigRuleName: s3-bucket-ssl-requests-only
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_BUCKET_SSL_REQUESTS_ONLY
      Type: AWS::Config::ConfigRule
  Conditions: {}
S3_DEFAULT_ENCRYPTION_KMS:
  Parameters: {}
  Rule: 
    S3DefaultEncryptionKms:
      Properties:
        ConfigRuleName: s3-default-encryption-kms
        Scope:
          ComplianceResourceTypes:
          - AWS::S3::Bucket
        Source:
          Owner: AWS
          SourceIdentifier: S3_DEFAULT_ENCRYPTION_KMS
      Type: AWS::Config::ConfigRule
  Conditions: {}
VPC_DEFAULT_SECURITY_GROUP_CLOSED: 
  Parameters: {}
  Rule:
    VpcDefaultSecurityGroupClosed:
      Properties:
        ConfigRuleName: vpc-default-security-group-closed
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::SecurityGroup
        Source:
          Owner: AWS
          SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED
      Type: AWS::Config::ConfigRule
  Conditions: {}
VPC_FLOW_LOGS_ENABLED:
  Parameters: {}
  Rule:
    VpcFlowLogsEnabled:
      Properties:
        ConfigRuleName: vpc-flow-logs-enabled
        Source:
          Owner: AWS
          SourceIdentifier: VPC_FLOW_LOGS_ENABLED
      Type: AWS::Config::ConfigRule
  Conditions: {}
VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS:
  Parameters:
    VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:
      Default: '443'
      Type: String
  Rule:
    VpcSgOpenOnlyToAuthorizedPorts:
      Properties:
        ConfigRuleName: vpc-sg-open-only-to-authorized-ports
        InputParameters:
          authorizedTcpPorts:
            Fn::If:
            - vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
            - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
            - Ref: AWS::NoValue
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::SecurityGroup
        Source:
          Owner: AWS
          SourceIdentifier: VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS
      Type: AWS::Config::ConfigRule
  Conditions:
    vpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts:
      Fn::Not:
      - Fn::Equals:
        - ''
        - Ref: VpcSgOpenOnlyToAuthorizedPortsParamAuthorizedTcpPorts
EC2_IMDSV2_CHECK:
  Parameters: {}
  Rule:
    Ec2Imdsv2Check:
      Properties:
        ConfigRuleName: ec2-imdsv2-check
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::Instance
        Source:
          Owner: AWS
          SourceIdentifier: EC2_IMDSV2_CHECK
      Type: AWS::Config::ConfigRule
  Conditions: {}
EC2_INSTANCE_MULTIPLE_ENI_CHECK:
  Parameters: {}
  Rule:
    Ec2InstanceMultipleEniCheck:
      Properties:
        ConfigRuleName: ec2-instance-multiple-eni-check
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::Instance
        Source:
          Owner: AWS
          SourceIdentifier: EC2_INSTANCE_MULTIPLE_ENI_CHECK
      Type: AWS::Config::ConfigRule
  Conditions: {}
EC2_INSTANCE_NO_PUBLIC_IP:
  Parameters: {}
  Rule:
    Ec2InstanceNoPublicIp:
      Properties:
        ConfigRuleName: ec2-instance-no-public-ip
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::Instance
        Source:
          Owner: AWS
          SourceIdentifier: EC2_INSTANCE_NO_PUBLIC_IP
      Type: AWS::Config::ConfigRule
  Conditions: {}
EC2_INSTANCE_PROFILE_ATTACHED:
  Parameters: {}
  Rule:
    Ec2InstanceProfileAttached:
      Properties:
        ConfigRuleName: ec2-instance-profile-attached
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::Instance
        Source:
          Owner: AWS
          SourceIdentifier: EC2_INSTANCE_PROFILE_ATTACHED
      Type: AWS::Config::ConfigRule
  Conditions: {}
EC2_SECURITY_GROUP_ATTACHED_TO_ENI:
  Parameters: {}
  Rule:
    Ec2SecurityGroupAttachedToEni:
      Properties:
        ConfigRuleName: ec2-security-group-attached-to-eni
        Scope:
          ComplianceResourceTypes:
          - AWS::EC2::SecurityGroup
        Source:
          Owner: AWS
          SourceIdentifier: EC2_SECURITY_GROUP_ATTACHED_TO_ENI
      Type: AWS::Config::ConfigRule
  Conditions: {}
EC2_STOPPED_INSTANCE:
  Parameters: {}
  Rule:
    Ec2StoppedInstance:
      Properties:
        ConfigRuleName: ec2-stopped-instance
        Source:
          Owner: AWS
          SourceIdentifier: EC2_STOPPED_INSTANCE
      Type: AWS::Config::ConfigRule
  Conditions: {}